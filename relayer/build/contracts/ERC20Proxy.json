{"contractName":"ERC20Proxy","abi":[{"constant":false,"inputs":[{"name":"target","type":"address"}],"name":"addAuthorizedAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x42f1181e"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"authorities","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x494503d4"},{"constant":false,"inputs":[{"name":"target","type":"address"}],"name":"removeAuthorizedAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x70712939"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x8da5cb5b"},{"constant":false,"inputs":[{"name":"target","type":"address"},{"name":"index","type":"uint256"}],"name":"removeAuthorizedAddressAtIndex","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x9ad26744"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"authorized","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xb9181611"},{"constant":true,"inputs":[],"name":"getAuthorizedAddresses","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xd39de6e9"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xf2fde38b"},{"payable":false,"stateMutability":"nonpayable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"target","type":"address"},{"indexed":true,"name":"caller","type":"address"}],"name":"AuthorizedAddressAdded","type":"event","signature":"0x3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c"},{"anonymous":false,"inputs":[{"indexed":true,"name":"target","type":"address"},{"indexed":true,"name":"caller","type":"address"}],"name":"AuthorizedAddressRemoved","type":"event","signature":"0x1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b0"},{"constant":true,"inputs":[],"name":"getProxyId","outputs":[{"name":"","type":"bytes4"}],"payable":false,"stateMutability":"pure","type":"function","signature":"0xae25532e"}],"bytecode":"0x608060405260008054600160a060020a03191633179055610bfb806100256000396000f3fe6080604052600436106100985763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166342f1181e8114610217578063494503d41461024c57806370712939146102925780638da5cb5b146102c55780639ad26744146102da578063ae25532e14610313578063b91816111461035a578063d39de6e9146103a1578063f2fde38b14610406575b3480156100a457600080fd5b507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19600035167fa85e59e4000000000000000000000000000000000000000000000000000000008114156102125760408051338152600160208201529081205415156101615760e560020a62461bcd026000527c20000000000000000000000000000000000000000000000000000000006020527c1553454e4445525f4e4f545f415554484f52495a454400000000000000604052600060605260646000fd5b602860043501357f23b872dd0000000000000000000000000000000000000000000000000000000060005260606024600437602060006064600080855af1600080511160203d14163d15178116905080156101b857005b60e560020a62461bcd026000527c20000000000000000000000000000000000000000000000000000000006020527c0f5452414e534645525f4641494c454400000000000000000000000000604052600060605260646000fd5b600080fd5b34801561022357600080fd5b5061024a6004803603602081101561023a57600080fd5b5035600160a060020a0316610439565b005b34801561025857600080fd5b506102766004803603602081101561026f57600080fd5b5035610595565b60408051600160a060020a039092168252519081900360200190f35b34801561029e57600080fd5b5061024a600480360360208110156102b557600080fd5b5035600160a060020a03166105bd565b3480156102d157600080fd5b506102766107a7565b3480156102e657600080fd5b5061024a600480360360408110156102fd57600080fd5b50600160a060020a0381351690602001356107b6565b34801561031f57600080fd5b50610328610a30565b604080517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff199092168252519081900360200190f35b34801561036657600080fd5b5061038d6004803603602081101561037d57600080fd5b5035600160a060020a0316610a66565b604080519115158252519081900360200190f35b3480156103ad57600080fd5b506103b6610a7b565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103f25781810151838201526020016103da565b505050509050019250505060405180910390f35b34801561041257600080fd5b5061024a6004803603602081101561042957600080fd5b5035600160a060020a0316610add565b600054600160a060020a03163314610489576040805160e560020a62461bcd0281526020600482015260136024820152600080516020610bb0833981519152604482015290519081900360640190fd5b600160a060020a03811660009081526001602052604090205460ff16156104fa576040805160e560020a62461bcd02815260206004820152601960248201527f5441524745545f414c52454144595f415554484f52495a454400000000000000604482015290519081900360640190fd5b600160a060020a0381166000818152600160208190526040808320805460ff19168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace909101805473ffffffffffffffffffffffffffffffffffffffff191684179055513392917f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c91a350565b60028054829081106105a357fe5b600091825260209091200154600160a060020a0316905081565b600054600160a060020a0316331461060d576040805160e560020a62461bcd0281526020600482015260136024820152600080516020610bb0833981519152604482015290519081900360640190fd5b600160a060020a03811660009081526001602052604090205460ff16151561067f576040805160e560020a62461bcd02815260206004820152601560248201527f5441524745545f4e4f545f415554484f52495a45440000000000000000000000604482015290519081900360640190fd5b600160a060020a0381166000908152600160205260408120805460ff191690555b60025481101561076d5781600160a060020a03166002828154811015156106c357fe5b600091825260209091200154600160a060020a03161415610765576002805460001981019081106106f057fe5b60009182526020909120015460028054600160a060020a03909216918390811061071657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905560028054600019019061075f9082610b68565b5061076d565b6001016106a0565b506040513390600160a060020a038316907f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b090600090a350565b600054600160a060020a031681565b600054600160a060020a03163314610806576040805160e560020a62461bcd0281526020600482015260136024820152600080516020610bb0833981519152604482015290519081900360640190fd5b600160a060020a03821660009081526001602052604090205460ff161515610878576040805160e560020a62461bcd02815260206004820152601560248201527f5441524745545f4e4f545f415554484f52495a45440000000000000000000000604482015290519081900360640190fd5b60025481106108d1576040805160e560020a62461bcd02815260206004820152601360248201527f494e4445585f4f55545f4f465f424f554e445300000000000000000000000000604482015290519081900360640190fd5b81600160a060020a03166002828154811015156108ea57fe5b600091825260209091200154600160a060020a031614610954576040805160e560020a62461bcd02815260206004820152601b60248201527f415554484f52495a45445f414444524553535f4d49534d415443480000000000604482015290519081900360640190fd5b600160a060020a0382166000908152600160205260409020805460ff1916905560028054600019810190811061098657fe5b60009182526020909120015460028054600160a060020a0390921691839081106109ac57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556002805460001901906109f59082610b68565b506040513390600160a060020a038416907f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b090600090a35050565b604080517f4552433230546f6b656e28616464726573732900000000000000000000000000815290519081900360130190205b90565b60016020526000908152604090205460ff1681565b60606002805480602002602001604051908101604052809291908181526020018280548015610ad357602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610ab5575b5050505050905090565b600054600160a060020a03163314610b2d576040805160e560020a62461bcd0281526020600482015260136024820152600080516020610bb0833981519152604482015290519081900360640190fd5b600160a060020a03811615610b65576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b815481835581811115610b8c57600083815260209020610b8c918101908301610b91565b505050565b610a6391905b80821115610bab5760008155600101610b97565b509056fe4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000a165627a7a72305820f71fa69f0c1a455a6cd7c4a0bf6859b6ee1b3860f8393906c9b3435daf8627ff0029","deployedBytecode":"0x6080604052600436106100985763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166342f1181e8114610217578063494503d41461024c57806370712939146102925780638da5cb5b146102c55780639ad26744146102da578063ae25532e14610313578063b91816111461035a578063d39de6e9146103a1578063f2fde38b14610406575b3480156100a457600080fd5b507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19600035167fa85e59e4000000000000000000000000000000000000000000000000000000008114156102125760408051338152600160208201529081205415156101615760e560020a62461bcd026000527c20000000000000000000000000000000000000000000000000000000006020527c1553454e4445525f4e4f545f415554484f52495a454400000000000000604052600060605260646000fd5b602860043501357f23b872dd0000000000000000000000000000000000000000000000000000000060005260606024600437602060006064600080855af1600080511160203d14163d15178116905080156101b857005b60e560020a62461bcd026000527c20000000000000000000000000000000000000000000000000000000006020527c0f5452414e534645525f4641494c454400000000000000000000000000604052600060605260646000fd5b600080fd5b34801561022357600080fd5b5061024a6004803603602081101561023a57600080fd5b5035600160a060020a0316610439565b005b34801561025857600080fd5b506102766004803603602081101561026f57600080fd5b5035610595565b60408051600160a060020a039092168252519081900360200190f35b34801561029e57600080fd5b5061024a600480360360208110156102b557600080fd5b5035600160a060020a03166105bd565b3480156102d157600080fd5b506102766107a7565b3480156102e657600080fd5b5061024a600480360360408110156102fd57600080fd5b50600160a060020a0381351690602001356107b6565b34801561031f57600080fd5b50610328610a30565b604080517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff199092168252519081900360200190f35b34801561036657600080fd5b5061038d6004803603602081101561037d57600080fd5b5035600160a060020a0316610a66565b604080519115158252519081900360200190f35b3480156103ad57600080fd5b506103b6610a7b565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103f25781810151838201526020016103da565b505050509050019250505060405180910390f35b34801561041257600080fd5b5061024a6004803603602081101561042957600080fd5b5035600160a060020a0316610add565b600054600160a060020a03163314610489576040805160e560020a62461bcd0281526020600482015260136024820152600080516020610bb0833981519152604482015290519081900360640190fd5b600160a060020a03811660009081526001602052604090205460ff16156104fa576040805160e560020a62461bcd02815260206004820152601960248201527f5441524745545f414c52454144595f415554484f52495a454400000000000000604482015290519081900360640190fd5b600160a060020a0381166000818152600160208190526040808320805460ff19168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace909101805473ffffffffffffffffffffffffffffffffffffffff191684179055513392917f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c91a350565b60028054829081106105a357fe5b600091825260209091200154600160a060020a0316905081565b600054600160a060020a0316331461060d576040805160e560020a62461bcd0281526020600482015260136024820152600080516020610bb0833981519152604482015290519081900360640190fd5b600160a060020a03811660009081526001602052604090205460ff16151561067f576040805160e560020a62461bcd02815260206004820152601560248201527f5441524745545f4e4f545f415554484f52495a45440000000000000000000000604482015290519081900360640190fd5b600160a060020a0381166000908152600160205260408120805460ff191690555b60025481101561076d5781600160a060020a03166002828154811015156106c357fe5b600091825260209091200154600160a060020a03161415610765576002805460001981019081106106f057fe5b60009182526020909120015460028054600160a060020a03909216918390811061071657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905560028054600019019061075f9082610b68565b5061076d565b6001016106a0565b506040513390600160a060020a038316907f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b090600090a350565b600054600160a060020a031681565b600054600160a060020a03163314610806576040805160e560020a62461bcd0281526020600482015260136024820152600080516020610bb0833981519152604482015290519081900360640190fd5b600160a060020a03821660009081526001602052604090205460ff161515610878576040805160e560020a62461bcd02815260206004820152601560248201527f5441524745545f4e4f545f415554484f52495a45440000000000000000000000604482015290519081900360640190fd5b60025481106108d1576040805160e560020a62461bcd02815260206004820152601360248201527f494e4445585f4f55545f4f465f424f554e445300000000000000000000000000604482015290519081900360640190fd5b81600160a060020a03166002828154811015156108ea57fe5b600091825260209091200154600160a060020a031614610954576040805160e560020a62461bcd02815260206004820152601b60248201527f415554484f52495a45445f414444524553535f4d49534d415443480000000000604482015290519081900360640190fd5b600160a060020a0382166000908152600160205260409020805460ff1916905560028054600019810190811061098657fe5b60009182526020909120015460028054600160a060020a0390921691839081106109ac57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556002805460001901906109f59082610b68565b506040513390600160a060020a038416907f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b090600090a35050565b604080517f4552433230546f6b656e28616464726573732900000000000000000000000000815290519081900360130190205b90565b60016020526000908152604090205460ff1681565b60606002805480602002602001604051908101604052809291908181526020018280548015610ad357602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610ab5575b5050505050905090565b600054600160a060020a03163314610b2d576040805160e560020a62461bcd0281526020600482015260136024820152600080516020610bb0833981519152604482015290519081900360640190fd5b600160a060020a03811615610b65576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b815481835581811115610b8c57600083815260209020610b8c918101908301610b91565b505050565b610a6391905b80821115610bab5760008155600101610b97565b509056fe4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000a165627a7a72305820f71fa69f0c1a455a6cd7c4a0bf6859b6ee1b3860f8393906c9b3435daf8627ff0029","sourceMap":"640:8532:3:-;;;161:5:43;:18;;-1:-1:-1;;;;;;161:18:43;169:10;161:18;;;640:8532:3;;;;;;","deployedSourceMap":"640:8532:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;640:8532:3;-1:-1:-1;;1021:1:3;1008:15;1004:88;1487:66;1477:8;1474:80;1471:2;;;1783;1777:9;;1821:6;1803:70;;1913:15;1908:2;1897:14;;1890:39;2024:20;;;2018:27;2011:35;2008:2;;;-1:-1:-1;;;;;2144:1:3;2137:77;2246:66;2242:2;2235:78;2345:66;2341:2;2334:78;2444:1;2440:2;2433:13;2477:3;2474:1;2467:14;2008:2;6439;6435:1;6422:15;6418:24;6405:38;6719:66;6716:1;6709:77;7008:2;7004;7001:1;6988:23;7513:2;7450:1;7395:3;7330:1;7272;7202:5;7147:3;7121:459;8322:1;8318;8312:8;8309:15;8280:2;8264:14;8261:22;8232:114;8195:14;8188:22;8164:200;8155:7;8151:214;8140:225;;8385:7;8382:2;;;8415:12;8382:2;-1:-1:-1;;;;;8528:1:3;8521:77;8626:66;8622:2;8615:78;8721:66;8717:2;8710:78;8816:1;8812:2;8805:13;8845:3;8842:1;8835:14;1471:2;8941:1;8938;8931:12;1144:320:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1144:320:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1144:320:5;-1:-1:-1;;;;;1144:320:5;;;;;1029:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1029:28:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1029:28:5;;;;;;;-1:-1:-1;;;;;1029:28:5;;;;;;;;;;;;;;1578:547;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1578:547:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1578:547:5;-1:-1:-1;;;;;1578:547:5;;;90:20:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;90:20:43;;;;2298:643:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2298:643:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2298:643:5;;;;;;;;;9057:113:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9057:113:3;;;;;;;;-1:-1:-1;;9057:113:3;;;;;;;;;;;;;;980:43:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;980:43:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;980:43:5;-1:-1:-1;;;;;980:43:5;;;;;;;;;;;;;;;;;;;;;3038:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3038:138:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3038:138:5;;;;;;;;;;;;;;;;;332:167:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;332:167:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;332:167:43;-1:-1:-1;;;;;332:167:43;;;1144:320:5;258:5:43;;-1:-1:-1;;;;;258:5:43;244:10;:19;223:85;;;;;-1:-1:-1;;;;;223:85:43;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;223:85:43;;;;;;;;;;;;;;;-1:-1:-1;;;;;1261:18:5;;;;;;:10;:18;;;;;;;;1260:19;1239:91;;;;;-1:-1:-1;;;;;1239:91:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1341:18:5;;;;;;1362:4;1341:18;;;;;;;;:25;;-1:-1:-1;;1341:25:5;;;;;1376:11;27:10:-1;;23:18;;;45:23;;1376:24:5;;;;;;;;-1:-1:-1;;1376:24:5;;;;;1415:42;1446:10;;1341:18;1415:42;;;1144:320;:::o;1029:28::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1029:28:5;;-1:-1:-1;1029:28:5;:::o;1578:547::-;258:5:43;;-1:-1:-1;;;;;258:5:43;244:10;:19;223:85;;;;;-1:-1:-1;;;;;223:85:43;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;223:85:43;;;;;;;;;;;;;;;-1:-1:-1;;;;;1697:18:5;;;;;;:10;:18;;;;;;;;1676:86;;;;;;;-1:-1:-1;;;;;1676:86:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1780:18:5;;;;;;:10;:18;;;;;1773:25;;-1:-1:-1;;1773:25:5;;;1808:252;1832:11;:18;1828:22;;1808:252;;;1893:6;-1:-1:-1;;;;;1875:24:5;:11;1887:1;1875:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1875:14:5;:24;1871:179;;;1936:11;1948:18;;-1:-1:-1;;1948:22:5;;;1936:35;;;;;;;;;;;;;;;;1919:11;:14;;-1:-1:-1;;;;;1936:35:5;;;;1931:1;;1919:14;;;;;;;;;;;;;;;:52;;-1:-1:-1;;1919:52:5;-1:-1:-1;;;;;1919:52:5;;;;;;;;;;1989:11;:23;;-1:-1:-1;;1989:23:5;;;;;;:::i;:::-;;2030:5;;1871:179;1852:3;;1808:252;;;-1:-1:-1;2074:44:5;;2107:10;;-1:-1:-1;;;;;2074:44:5;;;;;;;;1578:547;:::o;90:20:43:-;;;-1:-1:-1;;;;;90:20:43;;:::o;2298:643:5:-;258:5:43;;-1:-1:-1;;;;;258:5:43;244:10;:19;223:85;;;;;-1:-1:-1;;;;;223:85:43;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;223:85:43;;;;;;;;;;;;;;;-1:-1:-1;;;;;2461:18:5;;;;;;:10;:18;;;;;;;;2440:86;;;;;;;-1:-1:-1;;;;;2440:86:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:11;:18;2557:26;;2536:92;;;;;-1:-1:-1;;;;;2536:92:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2681:6;-1:-1:-1;;;;;2659:28:5;:11;2671:5;2659:18;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2659:18:5;:28;2638:102;;;;;-1:-1:-1;;;;;2638:102:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2758:18:5;;;;;;:10;:18;;;;;2751:25;;-1:-1:-1;;2751:25:5;;;2807:11;2819:18;;-1:-1:-1;;2819:22:5;;;2807:35;;;;;;;;;;;;;;;;2786:11;:18;;-1:-1:-1;;;;;2807:35:5;;;;2798:5;;2786:18;;;;;;;;;;;;;;;:56;;-1:-1:-1;;2786:56:5;-1:-1:-1;;;;;2786:56:5;;;;;;;;;;2852:11;:23;;-1:-1:-1;;2852:23:5;;;;;;:::i;:::-;-1:-1:-1;2890:44:5;;2923:10;;-1:-1:-1;;;;;2890:44:5;;;;;;;;2298:643;;:::o;9057:113:3:-;759:32;;;;;;;;;;;;;;;;9057:113;;:::o;980:43:5:-;;;;;;;;;;;;;;;:::o;3038:138::-;3119:16;3158:11;3151:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3151:18:5;;;;;;;;;;;;;;;;;;;;;;;3038:138;:::o;332:167:43:-;258:5;;-1:-1:-1;;;;;258:5:43;244:10;:19;223:85;;;;;-1:-1:-1;;;;;223:85:43;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;223:85:43;;;;;;;;;;;;;;;-1:-1:-1;;;;;428:22:43;;;424:69;;466:5;:16;;-1:-1:-1;;466:16:43;-1:-1:-1;;;;;466:16:43;;;;;424:69;332:167;:::o;640:8532:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;","source":"/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity 0.5.0;\n\nimport \"./MixinAuthorizable.sol\";\n\n\ncontract ERC20Proxy is\n    MixinAuthorizable\n{\n    // Id of this proxy.\n    bytes4 constant internal PROXY_ID = bytes4(keccak256(\"ERC20Token(address)\"));\n\n    // solhint-disable-next-line payable-fallback\n    function ()\n        external\n    {\n        assembly {\n            // The first 4 bytes of calldata holds the function selector\n            let selector := and(calldataload(0), 0xffffffff00000000000000000000000000000000000000000000000000000000)\n\n            // `transferFrom` will be called with the following parameters:\n            // assetData Encoded byte array.\n            // from Address to transfer asset from.\n            // to Address to transfer asset to.\n            // amount Amount of asset to transfer.\n            // bytes4(keccak256(\"transferFrom(bytes,address,address,uint256)\")) = 0xa85e59e4\n            if eq(selector, 0xa85e59e400000000000000000000000000000000000000000000000000000000) {\n\n                // To lookup a value in a mapping, we load from the storage location keccak256(k, p),\n                // where k is the key left padded to 32 bytes and p is the storage slot\n                let start := mload(64)\n                mstore(start, and(caller, 0xffffffffffffffffffffffffffffffffffffffff))\n                mstore(add(start, 32), authorized_slot)\n\n                // Revert if authorized[msg.sender] == false\n                if iszero(sload(keccak256(start, 64))) {\n                    // Revert with `Error(\"SENDER_NOT_AUTHORIZED\")`\n                    mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n                    mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n                    mstore(64, 0x0000001553454e4445525f4e4f545f415554484f52495a454400000000000000)\n                    mstore(96, 0)\n                    revert(0, 100)\n                }\n\n                // `transferFrom`.\n                // The function is marked `external`, so no abi decodeding is done for\n                // us. Instead, we expect the `calldata` memory to contain the\n                // following:\n                //\n                // | Area     | Offset | Length  | Contents                            |\n                // |----------|--------|---------|-------------------------------------|\n                // | Header   | 0      | 4       | function selector                   |\n                // | Params   |        | 4 * 32  | function parameters:                |\n                // |          | 4      |         |   1. offset to assetData (*)        |\n                // |          | 36     |         |   2. from                           |\n                // |          | 68     |         |   3. to                             |\n                // |          | 100    |         |   4. amount                         |\n                // | Data     |        |         | assetData:                          |\n                // |          | 132    | 32      | assetData Length                    |\n                // |          | 164    | **      | assetData Contents                  |\n                //\n                // (*): offset is computed from start of function parameters, so offset\n                //      by an additional 4 bytes in the calldata.\n                //\n                // (**): see table below to compute length of assetData Contents\n                //\n                // WARNING: The ABIv2 specification allows additional padding between\n                //          the Params and Data section. This will result in a larger\n                //          offset to assetData.\n\n                // Asset data itself is encoded as follows:\n                //\n                // | Area     | Offset | Length  | Contents                            |\n                // |----------|--------|---------|-------------------------------------|\n                // | Header   | 0      | 4       | function selector                   |\n                // | Params   |        | 1 * 32  | function parameters:                |\n                // |          | 4      | 12 + 20 |   1. token address                  |\n\n                // We construct calldata for the `token.transferFrom` ABI.\n                // The layout of this calldata is in the table below.\n                //\n                // | Area     | Offset | Length  | Contents                            |\n                // |----------|--------|---------|-------------------------------------|\n                // | Header   | 0      | 4       | function selector                   |\n                // | Params   |        | 3 * 32  | function parameters:                |\n                // |          | 4      |         |   1. from                           |\n                // |          | 36     |         |   2. to                             |\n                // |          | 68     |         |   3. amount                         |\n\n                /////// Read token address from calldata ///////\n                // * The token address is stored in `assetData`.\n                //\n                // * The \"offset to assetData\" is stored at offset 4 in the calldata (table 1).\n                //   [assetDataOffsetFromParams = calldataload(4)]\n                //\n                // * Notes that the \"offset to assetData\" is relative to the \"Params\" area of calldata;\n                //   add 4 bytes to account for the length of the \"Header\" area (table 1).\n                //   [assetDataOffsetFromHeader = assetDataOffsetFromParams + 4]\n                //\n                // * The \"token address\" is offset 32+4=36 bytes into \"assetData\" (tables 1 & 2).\n                //   [tokenOffset = assetDataOffsetFromHeader + 36 = calldataload(4) + 4 + 36]\n                let token := calldataload(add(calldataload(4), 40))\n\n                /////// Setup Header Area ///////\n                // This area holds the 4-byte `transferFrom` selector.\n                // Any trailing data in transferFromSelector will be\n                // overwritten in the next `mstore` call.\n                mstore(0, 0x23b872dd00000000000000000000000000000000000000000000000000000000)\n\n                /////// Setup Params Area ///////\n                // We copy the fields `from`, `to` and `amount` in bulk\n                // from our own calldata to the new calldata.\n                calldatacopy(4, 36, 96)\n\n                /////// Call `token.transferFrom` using the calldata ///////\n                let success := call(\n                    gas,            // forward all gas\n                    token,          // call address of token contract\n                    0,              // don't send any ETH\n                    0,              // pointer to start of input\n                    100,            // length of input\n                    0,              // write output over input\n                    32              // output size should be 32 bytes\n                )\n\n                /////// Check return data. ///////\n                // If there is no return data, we assume the token incorrectly\n                // does not return a bool. In this case we expect it to revert\n                // on failure, which was handled above.\n                // If the token does return data, we require that it is a single\n                // nonzero 32 bytes value.\n                // So the transfer succeeded if the call succeeded and either\n                // returned nothing, or returned a non-zero 32 byte value.\n                success := and(success, or(\n                    iszero(returndatasize),\n                    and(\n                        eq(returndatasize, 32),\n                        gt(mload(0), 0)\n                    )\n                ))\n                if success {\n                    return(0, 0)\n                }\n\n                // Revert with `Error(\"TRANSFER_FAILED\")`\n                mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n                mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n                mstore(64, 0x0000000f5452414e534645525f4641494c454400000000000000000000000000)\n                mstore(96, 0)\n                revert(0, 100)\n            }\n\n            // Revert if undefined function is called\n            revert(0, 0)\n        }\n    }\n\n    /// @dev Gets the proxy id associated with the proxy address.\n    /// @return Proxy id.\n    function getProxyId()\n        external\n        pure\n        returns (bytes4)\n    {\n        return PROXY_ID;\n    }\n}\n","sourcePath":"/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/AssetProxy/ERC20Proxy.sol","ast":{"absolutePath":"/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/AssetProxy/ERC20Proxy.sol","exportedSymbols":{"ERC20Proxy":[1353]},"id":1354,"nodeType":"SourceUnit","nodes":[{"id":1329,"literals":["solidity","0.5",".0"],"nodeType":"PragmaDirective","src":"580:22:3"},{"absolutePath":"/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/AssetProxy/MixinAuthorizable.sol","file":"./MixinAuthorizable.sol","id":1330,"nodeType":"ImportDirective","scope":1354,"sourceUnit":1577,"src":"604:33:3","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1331,"name":"MixinAuthorizable","nodeType":"UserDefinedTypeName","referencedDeclaration":1576,"src":"667:17:3","typeDescriptions":{"typeIdentifier":"t_contract$_MixinAuthorizable_$1576","typeString":"contract MixinAuthorizable"}},"id":1332,"nodeType":"InheritanceSpecifier","src":"667:17:3"}],"contractDependencies":[1576,1644,1696,6337,6385],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":1353,"linearizedBaseContracts":[1353,1576,1696,1644,6385,6337],"name":"ERC20Proxy","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1339,"name":"PROXY_ID","nodeType":"VariableDeclaration","scope":1353,"src":"716:76:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1333,"name":"bytes4","nodeType":"ElementaryTypeName","src":"716:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"4552433230546f6b656e286164647265737329","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"769:21:3","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_f47261b06eedbfce68afd46d0f3c27c60b03faad319eaf33103611cf8f6456ad","typeString":"literal_string \"ERC20Token(address)\""},"value":"ERC20Token(address)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f47261b06eedbfce68afd46d0f3c27c60b03faad319eaf33103611cf8f6456ad","typeString":"literal_string \"ERC20Token(address)\""}],"id":1335,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10655,"src":"759:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"759:32:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"752:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":"bytes4"},"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"752:40:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"body":{"id":1343,"nodeType":"Block","src":"882:8077:3","statements":[{"externalReferences":[{"authorized_slot":{"declaration":1403,"isOffset":false,"isSlot":true,"src":"1913:15:3","valueSize":1}}],"id":1342,"nodeType":"InlineAssembly","operations":"{\n    let selector := and(calldataload(0), 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    if eq(selector, 0xa85e59e400000000000000000000000000000000000000000000000000000000)\n    {\n        let start := mload(64)\n        mstore(start, and(caller(), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(start, 32), authorized_slot)\n        if iszero(sload(keccak256(start, 64)))\n        {\n            mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n            mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n            mstore(64, 0x0000001553454e4445525f4e4f545f415554484f52495a454400000000000000)\n            mstore(96, 0)\n            revert(0, 100)\n        }\n        let token := calldataload(add(calldataload(4), 40))\n        mstore(0, 0x23b872dd00000000000000000000000000000000000000000000000000000000)\n        calldatacopy(4, 36, 96)\n        let success := call(gas(), token, 0, 0, 100, 0, 32)\n        success := and(success, or(iszero(returndatasize()), and(eq(returndatasize(), 32), gt(mload(0), 0))))\n        if success\n        {\n            return(0, 0)\n        }\n        mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n        mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n        mstore(64, 0x0000000f5452414e534645525f4641494c454400000000000000000000000000)\n        mstore(96, 0)\n        revert(0, 100)\n    }\n    revert(0, 0)\n}","src":"892:8067:3"}]},"documentation":null,"id":1344,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[],"src":"858:2:3"},"returnParameters":{"id":1341,"nodeType":"ParameterList","parameters":[],"src":"882:0:3"},"scope":1353,"src":"849:8110:3","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":{"id":1351,"nodeType":"Block","src":"9138:32:3","statements":[{"expression":{"argumentTypes":null,"id":1349,"name":"PROXY_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"9155:8:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1348,"id":1350,"nodeType":"Return","src":"9148:15:3"}]},"documentation":"@dev Gets the proxy id associated with the proxy address.\n @return Proxy id.","id":1352,"implemented":true,"kind":"function","modifiers":[],"name":"getProxyId","nodeType":"FunctionDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[],"src":"9076:2:3"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"name":"","nodeType":"VariableDeclaration","scope":1352,"src":"9126:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1346,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9126:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"9125:8:3"},"scope":1353,"src":"9057:113:3","stateMutability":"pure","superFunction":null,"visibility":"external"}],"scope":1354,"src":"640:8532:3"}],"src":"580:8593:3"},"legacyAST":{"absolutePath":"/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/AssetProxy/ERC20Proxy.sol","exportedSymbols":{"ERC20Proxy":[1353]},"id":1354,"nodeType":"SourceUnit","nodes":[{"id":1329,"literals":["solidity","0.5",".0"],"nodeType":"PragmaDirective","src":"580:22:3"},{"absolutePath":"/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/AssetProxy/MixinAuthorizable.sol","file":"./MixinAuthorizable.sol","id":1330,"nodeType":"ImportDirective","scope":1354,"sourceUnit":1577,"src":"604:33:3","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1331,"name":"MixinAuthorizable","nodeType":"UserDefinedTypeName","referencedDeclaration":1576,"src":"667:17:3","typeDescriptions":{"typeIdentifier":"t_contract$_MixinAuthorizable_$1576","typeString":"contract MixinAuthorizable"}},"id":1332,"nodeType":"InheritanceSpecifier","src":"667:17:3"}],"contractDependencies":[1576,1644,1696,6337,6385],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":1353,"linearizedBaseContracts":[1353,1576,1696,1644,6385,6337],"name":"ERC20Proxy","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1339,"name":"PROXY_ID","nodeType":"VariableDeclaration","scope":1353,"src":"716:76:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1333,"name":"bytes4","nodeType":"ElementaryTypeName","src":"716:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"4552433230546f6b656e286164647265737329","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"769:21:3","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_f47261b06eedbfce68afd46d0f3c27c60b03faad319eaf33103611cf8f6456ad","typeString":"literal_string \"ERC20Token(address)\""},"value":"ERC20Token(address)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f47261b06eedbfce68afd46d0f3c27c60b03faad319eaf33103611cf8f6456ad","typeString":"literal_string \"ERC20Token(address)\""}],"id":1335,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10655,"src":"759:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"759:32:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"752:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":"bytes4"},"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"752:40:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"body":{"id":1343,"nodeType":"Block","src":"882:8077:3","statements":[{"externalReferences":[{"authorized_slot":{"declaration":1403,"isOffset":false,"isSlot":true,"src":"1913:15:3","valueSize":1}}],"id":1342,"nodeType":"InlineAssembly","operations":"{\n    let selector := and(calldataload(0), 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    if eq(selector, 0xa85e59e400000000000000000000000000000000000000000000000000000000)\n    {\n        let start := mload(64)\n        mstore(start, and(caller(), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(start, 32), authorized_slot)\n        if iszero(sload(keccak256(start, 64)))\n        {\n            mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n            mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n            mstore(64, 0x0000001553454e4445525f4e4f545f415554484f52495a454400000000000000)\n            mstore(96, 0)\n            revert(0, 100)\n        }\n        let token := calldataload(add(calldataload(4), 40))\n        mstore(0, 0x23b872dd00000000000000000000000000000000000000000000000000000000)\n        calldatacopy(4, 36, 96)\n        let success := call(gas(), token, 0, 0, 100, 0, 32)\n        success := and(success, or(iszero(returndatasize()), and(eq(returndatasize(), 32), gt(mload(0), 0))))\n        if success\n        {\n            return(0, 0)\n        }\n        mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n        mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n        mstore(64, 0x0000000f5452414e534645525f4641494c454400000000000000000000000000)\n        mstore(96, 0)\n        revert(0, 100)\n    }\n    revert(0, 0)\n}","src":"892:8067:3"}]},"documentation":null,"id":1344,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[],"src":"858:2:3"},"returnParameters":{"id":1341,"nodeType":"ParameterList","parameters":[],"src":"882:0:3"},"scope":1353,"src":"849:8110:3","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":{"id":1351,"nodeType":"Block","src":"9138:32:3","statements":[{"expression":{"argumentTypes":null,"id":1349,"name":"PROXY_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"9155:8:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1348,"id":1350,"nodeType":"Return","src":"9148:15:3"}]},"documentation":"@dev Gets the proxy id associated with the proxy address.\n @return Proxy id.","id":1352,"implemented":true,"kind":"function","modifiers":[],"name":"getProxyId","nodeType":"FunctionDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[],"src":"9076:2:3"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"name":"","nodeType":"VariableDeclaration","scope":1352,"src":"9126:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1346,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9126:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"9125:8:3"},"scope":1353,"src":"9057:113:3","stateMutability":"pure","superFunction":null,"visibility":"external"}],"scope":1354,"src":"640:8532:3"}],"src":"580:8593:3"},"compiler":{"name":"solc","version":"0.5.0+commit.1d4f565a.Emscripten.clang"},"networks":{},"schemaVersion":"3.0.1","updatedAt":"2019-01-31T19:07:12.894Z","devdoc":{"methods":{"addAuthorizedAddress(address)":{"details":"Authorizes an address.","params":{"target":"Address to authorize."}},"getAuthorizedAddresses()":{"details":"Gets all authorized addresses.","return":"Array of authorized addresses."},"getProxyId()":{"details":"Gets the proxy id associated with the proxy address.","return":"Proxy id."},"removeAuthorizedAddress(address)":{"details":"Removes authorizion of an address.","params":{"target":"Address to remove authorization from."}},"removeAuthorizedAddressAtIndex(address,uint256)":{"details":"Removes authorizion of an address.","params":{"index":"Index of target in authorities array.","target":"Address to remove authorization from."}}}},"userdoc":{"methods":{}},"chain_tags":{"0x4a":{"address":"0x13E183e04c33aD35A4c86279a7837115268f4A4F"}}}