{
  "contractName": "MMatchOrders",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "leftOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "rightOrder",
          "type": "tuple"
        },
        {
          "name": "leftSignature",
          "type": "bytes"
        },
        {
          "name": "rightSignature",
          "type": "bytes"
        }
      ],
      "name": "matchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "name": "takerFeePaid",
                  "type": "uint256"
                }
              ],
              "name": "left",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "name": "takerFeePaid",
                  "type": "uint256"
                }
              ],
              "name": "right",
              "type": "tuple"
            },
            {
              "name": "leftMakerAssetSpreadAmount",
              "type": "uint256"
            }
          ],
          "name": "matchedFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\npragma solidity 0.5.0;\npragma experimental ABIEncoderV2;\n\nimport \"../libs/LibOrder.sol\";\nimport \"../libs/LibFillResults.sol\";\nimport \"../interfaces/IMatchOrders.sol\";\n\n\ncontract MMatchOrders is\n    IMatchOrders\n{\n    /// @dev Validates context for matchOrders. Succeeds or throws.\n    /// @param leftOrder First order to match.\n    /// @param rightOrder Second order to match.\n    function assertValidMatch(\n        LibOrder.Order memory leftOrder,\n        LibOrder.Order memory rightOrder\n    )\n        internal\n        pure;\n\n    /// @dev Calculates fill amounts for the matched orders.\n    ///      Each order is filled at their respective price point. However, the calculations are\n    ///      carried out as though the orders are both being filled at the right order's price point.\n    ///      The profit made by the leftOrder order goes to the taker (who matched the two orders).\n    /// @param leftOrder First order to match.\n    /// @param rightOrder Second order to match.\n    /// @param leftOrderTakerAssetFilledAmount Amount of left order already filled.\n    /// @param rightOrderTakerAssetFilledAmount Amount of right order already filled.\n    /// @param matchedFillResults Amounts to fill and fees to pay by maker and taker of matched orders.\n    function calculateMatchedFillResults(\n        LibOrder.Order memory leftOrder,\n        LibOrder.Order memory rightOrder,\n        uint256 leftOrderTakerAssetFilledAmount,\n        uint256 rightOrderTakerAssetFilledAmount\n    )\n        internal\n        pure\n        returns (LibFillResults.MatchedFillResults memory matchedFillResults);\n\n}\n",
  "sourcePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/mixins/MMatchOrders.sol",
  "ast": {
    "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/mixins/MMatchOrders.sol",
    "exportedSymbols": {
      "MMatchOrders": [
        5734
      ]
    },
    "id": 5735,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5707,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "579:22:37"
      },
      {
        "id": 5708,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "602:33:37"
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/libs/LibOrder.sol",
        "file": "../libs/LibOrder.sol",
        "id": 5709,
        "nodeType": "ImportDirective",
        "scope": 5735,
        "sourceUnit": 5552,
        "src": "637:30:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/libs/LibFillResults.sol",
        "file": "../libs/LibFillResults.sol",
        "id": 5710,
        "nodeType": "ImportDirective",
        "scope": 5735,
        "sourceUnit": 5163,
        "src": "668:36:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IMatchOrders.sol",
        "file": "../interfaces/IMatchOrders.sol",
        "id": 5711,
        "nodeType": "ImportDirective",
        "scope": 5735,
        "sourceUnit": 4699,
        "src": "705:40:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5712,
              "name": "IMatchOrders",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4698,
              "src": "777:12:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMatchOrders_$4698",
                "typeString": "contract IMatchOrders"
              }
            },
            "id": 5713,
            "nodeType": "InheritanceSpecifier",
            "src": "777:12:37"
          }
        ],
        "contractDependencies": [
          4698
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 5734,
        "linearizedBaseContracts": [
          5734,
          4698
        ],
        "name": "MMatchOrders",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Validates context for matchOrders. Succeeds or throws.\n @param leftOrder First order to match.\n @param rightOrder Second order to match.",
            "id": 5720,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "assertValidMatch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5715,
                  "name": "leftOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 5720,
                  "src": "995:31:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$5496_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5714,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5496,
                    "src": "995:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$5496_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5717,
                  "name": "rightOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 5720,
                  "src": "1036:32:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$5496_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5716,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5496,
                    "src": "1036:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$5496_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "985:89:37"
            },
            "returnParameters": {
              "id": 5719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1104:0:37"
            },
            "scope": 5734,
            "src": "960:145:37",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Calculates fill amounts for the matched orders.\n      Each order is filled at their respective price point. However, the calculations are\n      carried out as though the orders are both being filled at the right order's price point.\n      The profit made by the leftOrder order goes to the taker (who matched the two orders).\n @param leftOrder First order to match.\n @param rightOrder Second order to match.\n @param leftOrderTakerAssetFilledAmount Amount of left order already filled.\n @param rightOrderTakerAssetFilledAmount Amount of right order already filled.\n @param matchedFillResults Amounts to fill and fees to pay by maker and taker of matched orders.",
            "id": 5733,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateMatchedFillResults",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5722,
                  "name": "leftOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 5733,
                  "src": "1887:31:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$5496_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5721,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5496,
                    "src": "1887:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$5496_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5724,
                  "name": "rightOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 5733,
                  "src": "1928:32:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$5496_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5723,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5496,
                    "src": "1928:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$5496_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5726,
                  "name": "leftOrderTakerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5733,
                  "src": "1970:39:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1970:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5728,
                  "name": "rightOrderTakerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5733,
                  "src": "2019:40:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1877:188:37"
            },
            "returnParameters": {
              "id": 5732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5731,
                  "name": "matchedFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 5733,
                  "src": "2113:59:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchedFillResults_$5109_memory_ptr",
                    "typeString": "struct LibFillResults.MatchedFillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5730,
                    "name": "LibFillResults.MatchedFillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5109,
                    "src": "2113:33:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchedFillResults_$5109_storage_ptr",
                      "typeString": "struct LibFillResults.MatchedFillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2112:61:37"
            },
            "scope": 5734,
            "src": "1841:333:37",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 5735,
        "src": "748:1429:37"
      }
    ],
    "src": "579:1599:37"
  },
  "legacyAST": {
    "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/mixins/MMatchOrders.sol",
    "exportedSymbols": {
      "MMatchOrders": [
        5734
      ]
    },
    "id": 5735,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5707,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "579:22:37"
      },
      {
        "id": 5708,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "602:33:37"
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/libs/LibOrder.sol",
        "file": "../libs/LibOrder.sol",
        "id": 5709,
        "nodeType": "ImportDirective",
        "scope": 5735,
        "sourceUnit": 5552,
        "src": "637:30:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/libs/LibFillResults.sol",
        "file": "../libs/LibFillResults.sol",
        "id": 5710,
        "nodeType": "ImportDirective",
        "scope": 5735,
        "sourceUnit": 5163,
        "src": "668:36:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IMatchOrders.sol",
        "file": "../interfaces/IMatchOrders.sol",
        "id": 5711,
        "nodeType": "ImportDirective",
        "scope": 5735,
        "sourceUnit": 4699,
        "src": "705:40:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5712,
              "name": "IMatchOrders",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4698,
              "src": "777:12:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMatchOrders_$4698",
                "typeString": "contract IMatchOrders"
              }
            },
            "id": 5713,
            "nodeType": "InheritanceSpecifier",
            "src": "777:12:37"
          }
        ],
        "contractDependencies": [
          4698
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 5734,
        "linearizedBaseContracts": [
          5734,
          4698
        ],
        "name": "MMatchOrders",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Validates context for matchOrders. Succeeds or throws.\n @param leftOrder First order to match.\n @param rightOrder Second order to match.",
            "id": 5720,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "assertValidMatch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5715,
                  "name": "leftOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 5720,
                  "src": "995:31:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$5496_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5714,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5496,
                    "src": "995:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$5496_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5717,
                  "name": "rightOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 5720,
                  "src": "1036:32:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$5496_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5716,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5496,
                    "src": "1036:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$5496_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "985:89:37"
            },
            "returnParameters": {
              "id": 5719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1104:0:37"
            },
            "scope": 5734,
            "src": "960:145:37",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Calculates fill amounts for the matched orders.\n      Each order is filled at their respective price point. However, the calculations are\n      carried out as though the orders are both being filled at the right order's price point.\n      The profit made by the leftOrder order goes to the taker (who matched the two orders).\n @param leftOrder First order to match.\n @param rightOrder Second order to match.\n @param leftOrderTakerAssetFilledAmount Amount of left order already filled.\n @param rightOrderTakerAssetFilledAmount Amount of right order already filled.\n @param matchedFillResults Amounts to fill and fees to pay by maker and taker of matched orders.",
            "id": 5733,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateMatchedFillResults",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5722,
                  "name": "leftOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 5733,
                  "src": "1887:31:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$5496_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5721,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5496,
                    "src": "1887:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$5496_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5724,
                  "name": "rightOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 5733,
                  "src": "1928:32:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$5496_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5723,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5496,
                    "src": "1928:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$5496_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5726,
                  "name": "leftOrderTakerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5733,
                  "src": "1970:39:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1970:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5728,
                  "name": "rightOrderTakerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5733,
                  "src": "2019:40:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1877:188:37"
            },
            "returnParameters": {
              "id": 5732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5731,
                  "name": "matchedFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 5733,
                  "src": "2113:59:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchedFillResults_$5109_memory_ptr",
                    "typeString": "struct LibFillResults.MatchedFillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5730,
                    "name": "LibFillResults.MatchedFillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5109,
                    "src": "2113:33:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchedFillResults_$5109_storage_ptr",
                      "typeString": "struct LibFillResults.MatchedFillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2112:61:37"
            },
            "scope": 5734,
            "src": "1841:333:37",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 5735,
        "src": "748:1429:37"
      }
    ],
    "src": "579:1599:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-31T19:07:12.932Z",
  "devdoc": {
    "methods": {
      "matchOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes,bytes)": {
        "details": "Match two complementary orders that have a profitable spread.      Each order is filled at their respective price point. However, the calculations are      carried out as though the orders are both being filled at the right order's price point.      The profit made by the left order goes to the taker (who matched the two orders).",
        "params": {
          "leftOrder": "First order to match.",
          "leftSignature": "Proof that order was created by the left maker.",
          "rightOrder": "Second order to match.",
          "rightSignature": "Proof that order was created by the right maker."
        },
        "return": "matchedFillResults Amounts filled and fees paid by maker and taker of matched orders."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}