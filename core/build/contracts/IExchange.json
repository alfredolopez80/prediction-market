{
  "contractName": "IExchange",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "takerAssetFillAmounts",
          "type": "uint256[]"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "batchFillOrders",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "signerAddress",
          "type": "address"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "preSign",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "leftOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "rightOrder",
          "type": "tuple"
        },
        {
          "name": "leftSignature",
          "type": "bytes"
        },
        {
          "name": "rightSignature",
          "type": "bytes"
        }
      ],
      "name": "matchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "name": "takerFeePaid",
                  "type": "uint256"
                }
              ],
              "name": "left",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "name": "takerFeePaid",
                  "type": "uint256"
                }
              ],
              "name": "right",
              "type": "tuple"
            },
            {
              "name": "leftMakerAssetSpreadAmount",
              "type": "uint256"
            }
          ],
          "name": "matchedFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "fillOrderNoThrow",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "fillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "batchCancelOrders",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "takerAssetFillAmounts",
          "type": "uint256[]"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "batchFillOrKillOrders",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "targetOrderEpoch",
          "type": "uint256"
        }
      ],
      "name": "cancelOrdersUpTo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "takerAssetFillAmounts",
          "type": "uint256[]"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "batchFillOrdersNoThrow",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "assetProxyId",
          "type": "bytes4"
        }
      ],
      "name": "getAssetProxy",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "fillOrKillOrder",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "fillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "name": "approval",
          "type": "bool"
        }
      ],
      "name": "setSignatureValidatorApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "marketSellOrders",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "getOrdersInfo",
      "outputs": [
        {
          "components": [
            {
              "name": "orderStatus",
              "type": "uint8"
            },
            {
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "name": "orderTakerAssetFilledAmount",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "signerAddress",
          "type": "address"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "makerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "marketBuyOrdersNoThrow",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "fillOrder",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "fillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "salt",
          "type": "uint256"
        },
        {
          "name": "signerAddress",
          "type": "address"
        },
        {
          "name": "data",
          "type": "bytes"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "assetProxy",
          "type": "address"
        }
      ],
      "name": "registerAssetProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getOrderInfo",
      "outputs": [
        {
          "components": [
            {
              "name": "orderStatus",
              "type": "uint8"
            },
            {
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "name": "orderTakerAssetFilledAmount",
              "type": "uint256"
            }
          ],
          "name": "orderInfo",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "marketSellOrdersNoThrow",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "makerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "marketBuyOrders",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity 0.5.0;\npragma experimental ABIEncoderV2;\n\nimport \"./IExchangeCore.sol\";\nimport \"./IMatchOrders.sol\";\nimport \"./ISignatureValidator.sol\";\nimport \"./ITransactions.sol\";\nimport \"./IAssetProxyDispatcher.sol\";\nimport \"./IWrapperFunctions.sol\";\n\n\n// solhint-disable no-empty-blocks\ncontract IExchange is\n    IExchangeCore,\n    IMatchOrders,\n    ISignatureValidator,\n    ITransactions,\n    IAssetProxyDispatcher,\n    IWrapperFunctions\n{}\n",
  "sourcePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IExchange.sol",
  "ast": {
    "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IExchange.sol",
    "exportedSymbols": {
      "IExchange": [
        4645
      ]
    },
    "id": 4646,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4625,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:22:20"
      },
      {
        "id": 4626,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "603:33:20"
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IExchangeCore.sol",
        "file": "./IExchangeCore.sol",
        "id": 4627,
        "nodeType": "ImportDirective",
        "scope": 4646,
        "sourceUnit": 4680,
        "src": "638:29:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IMatchOrders.sol",
        "file": "./IMatchOrders.sol",
        "id": 4628,
        "nodeType": "ImportDirective",
        "scope": 4646,
        "sourceUnit": 4699,
        "src": "668:28:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/ISignatureValidator.sol",
        "file": "./ISignatureValidator.sol",
        "id": 4629,
        "nodeType": "ImportDirective",
        "scope": 4646,
        "sourceUnit": 4729,
        "src": "697:35:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/ITransactions.sol",
        "file": "./ITransactions.sol",
        "id": 4630,
        "nodeType": "ImportDirective",
        "scope": 4646,
        "sourceUnit": 4743,
        "src": "733:29:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IAssetProxyDispatcher.sol",
        "file": "./IAssetProxyDispatcher.sol",
        "id": 4631,
        "nodeType": "ImportDirective",
        "scope": 4646,
        "sourceUnit": 4624,
        "src": "763:37:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IWrapperFunctions.sol",
        "file": "./IWrapperFunctions.sol",
        "id": 4632,
        "nodeType": "ImportDirective",
        "scope": 4646,
        "sourceUnit": 4906,
        "src": "801:33:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4633,
              "name": "IExchangeCore",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4679,
              "src": "898:13:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchangeCore_$4679",
                "typeString": "contract IExchangeCore"
              }
            },
            "id": 4634,
            "nodeType": "InheritanceSpecifier",
            "src": "898:13:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4635,
              "name": "IMatchOrders",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4698,
              "src": "917:12:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMatchOrders_$4698",
                "typeString": "contract IMatchOrders"
              }
            },
            "id": 4636,
            "nodeType": "InheritanceSpecifier",
            "src": "917:12:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4637,
              "name": "ISignatureValidator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4728,
              "src": "935:19:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISignatureValidator_$4728",
                "typeString": "contract ISignatureValidator"
              }
            },
            "id": 4638,
            "nodeType": "InheritanceSpecifier",
            "src": "935:19:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4639,
              "name": "ITransactions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4742,
              "src": "960:13:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITransactions_$4742",
                "typeString": "contract ITransactions"
              }
            },
            "id": 4640,
            "nodeType": "InheritanceSpecifier",
            "src": "960:13:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4641,
              "name": "IAssetProxyDispatcher",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4623,
              "src": "979:21:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAssetProxyDispatcher_$4623",
                "typeString": "contract IAssetProxyDispatcher"
              }
            },
            "id": 4642,
            "nodeType": "InheritanceSpecifier",
            "src": "979:21:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4643,
              "name": "IWrapperFunctions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4905,
              "src": "1006:17:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWrapperFunctions_$4905",
                "typeString": "contract IWrapperFunctions"
              }
            },
            "id": 4644,
            "nodeType": "InheritanceSpecifier",
            "src": "1006:17:20"
          }
        ],
        "contractDependencies": [
          4623,
          4679,
          4698,
          4728,
          4742,
          4905
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 4645,
        "linearizedBaseContracts": [
          4645,
          4905,
          4623,
          4742,
          4728,
          4698,
          4679
        ],
        "name": "IExchange",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 4646,
        "src": "872:154:20"
      }
    ],
    "src": "580:447:20"
  },
  "legacyAST": {
    "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IExchange.sol",
    "exportedSymbols": {
      "IExchange": [
        4645
      ]
    },
    "id": 4646,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4625,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:22:20"
      },
      {
        "id": 4626,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "603:33:20"
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IExchangeCore.sol",
        "file": "./IExchangeCore.sol",
        "id": 4627,
        "nodeType": "ImportDirective",
        "scope": 4646,
        "sourceUnit": 4680,
        "src": "638:29:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IMatchOrders.sol",
        "file": "./IMatchOrders.sol",
        "id": 4628,
        "nodeType": "ImportDirective",
        "scope": 4646,
        "sourceUnit": 4699,
        "src": "668:28:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/ISignatureValidator.sol",
        "file": "./ISignatureValidator.sol",
        "id": 4629,
        "nodeType": "ImportDirective",
        "scope": 4646,
        "sourceUnit": 4729,
        "src": "697:35:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/ITransactions.sol",
        "file": "./ITransactions.sol",
        "id": 4630,
        "nodeType": "ImportDirective",
        "scope": 4646,
        "sourceUnit": 4743,
        "src": "733:29:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IAssetProxyDispatcher.sol",
        "file": "./IAssetProxyDispatcher.sol",
        "id": 4631,
        "nodeType": "ImportDirective",
        "scope": 4646,
        "sourceUnit": 4624,
        "src": "763:37:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/IWrapperFunctions.sol",
        "file": "./IWrapperFunctions.sol",
        "id": 4632,
        "nodeType": "ImportDirective",
        "scope": 4646,
        "sourceUnit": 4906,
        "src": "801:33:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4633,
              "name": "IExchangeCore",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4679,
              "src": "898:13:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchangeCore_$4679",
                "typeString": "contract IExchangeCore"
              }
            },
            "id": 4634,
            "nodeType": "InheritanceSpecifier",
            "src": "898:13:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4635,
              "name": "IMatchOrders",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4698,
              "src": "917:12:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMatchOrders_$4698",
                "typeString": "contract IMatchOrders"
              }
            },
            "id": 4636,
            "nodeType": "InheritanceSpecifier",
            "src": "917:12:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4637,
              "name": "ISignatureValidator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4728,
              "src": "935:19:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISignatureValidator_$4728",
                "typeString": "contract ISignatureValidator"
              }
            },
            "id": 4638,
            "nodeType": "InheritanceSpecifier",
            "src": "935:19:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4639,
              "name": "ITransactions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4742,
              "src": "960:13:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITransactions_$4742",
                "typeString": "contract ITransactions"
              }
            },
            "id": 4640,
            "nodeType": "InheritanceSpecifier",
            "src": "960:13:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4641,
              "name": "IAssetProxyDispatcher",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4623,
              "src": "979:21:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAssetProxyDispatcher_$4623",
                "typeString": "contract IAssetProxyDispatcher"
              }
            },
            "id": 4642,
            "nodeType": "InheritanceSpecifier",
            "src": "979:21:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4643,
              "name": "IWrapperFunctions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4905,
              "src": "1006:17:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWrapperFunctions_$4905",
                "typeString": "contract IWrapperFunctions"
              }
            },
            "id": 4644,
            "nodeType": "InheritanceSpecifier",
            "src": "1006:17:20"
          }
        ],
        "contractDependencies": [
          4623,
          4679,
          4698,
          4728,
          4742,
          4905
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 4645,
        "linearizedBaseContracts": [
          4645,
          4905,
          4623,
          4742,
          4728,
          4698,
          4679
        ],
        "name": "IExchange",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 4646,
        "src": "872:154:20"
      }
    ],
    "src": "580:447:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-31T19:07:12.918Z",
  "devdoc": {
    "methods": {
      "batchCancelOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": {
        "details": "Synchronously cancels multiple orders in a single transaction.",
        "params": {
          "orders": "Array of order specifications."
        }
      },
      "batchFillOrKillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrKill.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been created by makers.",
          "takerAssetFillAmounts": "Array of desired amounts of takerAsset to sell in orders."
        },
        "return": "Amounts filled and fees paid by makers and taker."
      },
      "batchFillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrder.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been created by makers.",
          "takerAssetFillAmounts": "Array of desired amounts of takerAsset to sell in orders."
        },
        "return": "Amounts filled and fees paid by makers and taker."
      },
      "batchFillOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])": {
        "details": "Fills an order with specified parameters and ECDSA signature.      Returns false if the transaction would otherwise revert.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been created by makers.",
          "takerAssetFillAmounts": "Array of desired amounts of takerAsset to sell in orders."
        },
        "return": "Amounts filled and fees paid by makers and taker."
      },
      "cancelOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "details": "After calling, the order can not be filled anymore.",
        "params": {
          "order": "Order struct containing order specifications."
        }
      },
      "cancelOrdersUpTo(uint256)": {
        "details": "Cancels all orders created by makerAddress with a salt less than or equal to the targetOrderEpoch      and senderAddress equal to msg.sender (or null address if msg.sender == makerAddress).",
        "params": {
          "targetOrderEpoch": "Orders created with a salt less or equal to this value will be cancelled."
        }
      },
      "executeTransaction(uint256,address,bytes,bytes)": {
        "details": "Executes an exchange method call in the context of signer.",
        "params": {
          "data": "AbiV2 encoded calldata.",
          "salt": "Arbitrary number to ensure uniqueness of transaction hash.",
          "signature": "Proof of signer transaction by signer.",
          "signerAddress": "Address of transaction signer."
        }
      },
      "fillOrKillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)": {
        "details": "Fills the input order. Reverts if exact takerAssetFillAmount not filled.",
        "params": {
          "order": "LibOrder.Order struct containing order specifications.",
          "signature": "Proof that order has been created by maker.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        }
      },
      "fillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)": {
        "details": "Fills the input order.",
        "params": {
          "order": "Order struct containing order specifications.",
          "signature": "Proof that order has been created by maker.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        },
        "return": "Amounts filled and fees paid by maker and taker."
      },
      "fillOrderNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)": {
        "details": "Fills an order with specified parameters and ECDSA signature.      Returns false if the transaction would otherwise revert.",
        "params": {
          "order": "LibOrder.Order struct containing order specifications.",
          "signature": "Proof that order has been created by maker.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        },
        "return": "Amounts filled and fees paid by maker and taker."
      },
      "getAssetProxy(bytes4)": {
        "details": "Gets an asset proxy.",
        "params": {
          "assetProxyId": "Id of the asset proxy."
        },
        "return": "The asset proxy registered to assetProxyId. Returns 0x0 if no proxy is registered."
      },
      "getOrderInfo((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "details": "Gets information about an order: status, hash, and amount filled.",
        "params": {
          "order": "Order to gather information on."
        },
        "return": "OrderInfo Information about the order and its state.                   See LibOrder.OrderInfo for a complete description."
      },
      "getOrdersInfo((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": {
        "details": "Fetches information for all passed in orders",
        "params": {
          "orders": "Array of order specifications."
        },
        "return": "Array of OrderInfo instances that correspond to each order."
      },
      "isValidSignature(bytes32,address,bytes)": {
        "details": "Verifies that a signature is valid.",
        "params": {
          "hash": "Message hash that is signed.",
          "signature": "Proof of signing.",
          "signerAddress": "Address of signer."
        },
        "return": "Validity of order signature."
      },
      "marketBuyOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.",
        "params": {
          "makerAssetFillAmount": "Desired amount of makerAsset to buy.",
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been signed by makers."
        },
        "return": "Amounts filled and fees paid by makers and taker."
      },
      "marketBuyOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
        "details": "Synchronously executes multiple fill orders in a single transaction until total amount is bought by taker.      Returns false if the transaction would otherwise revert.",
        "params": {
          "makerAssetFillAmount": "Desired amount of makerAsset to buy.",
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been signed by makers."
        },
        "return": "Amounts filled and fees paid by makers and taker."
      },
      "marketSellOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been created by makers.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        },
        "return": "Amounts filled and fees paid by makers and taker."
      },
      "marketSellOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.      Returns false if the transaction would otherwise revert.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been signed by makers.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        },
        "return": "Amounts filled and fees paid by makers and taker."
      },
      "matchOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes,bytes)": {
        "details": "Match two complementary orders that have a profitable spread.      Each order is filled at their respective price point. However, the calculations are      carried out as though the orders are both being filled at the right order's price point.      The profit made by the left order goes to the taker (who matched the two orders).",
        "params": {
          "leftOrder": "First order to match.",
          "leftSignature": "Proof that order was created by the left maker.",
          "rightOrder": "Second order to match.",
          "rightSignature": "Proof that order was created by the right maker."
        },
        "return": "matchedFillResults Amounts filled and fees paid by maker and taker of matched orders."
      },
      "preSign(bytes32,address,bytes)": {
        "details": "Approves a hash on-chain using any valid signature type.      After presigning a hash, the preSign signature type will become valid for that hash and signer.",
        "params": {
          "signature": "Proof that the hash has been signed by signer.",
          "signerAddress": "Address that should have signed the given hash."
        }
      },
      "registerAssetProxy(address)": {
        "details": "Registers an asset proxy to its asset proxy id.      Once an asset proxy is registered, it cannot be unregistered.",
        "params": {
          "assetProxy": "Address of new asset proxy to register."
        }
      },
      "setSignatureValidatorApproval(address,bool)": {
        "details": "Approves/unnapproves a Validator contract to verify signatures on signer's behalf.",
        "params": {
          "approval": "Approval or disapproval of  Validator contract.",
          "validatorAddress": "Address of Validator contract."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}