{
  "contractName": "MSignatureValidator",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "signerAddress",
          "type": "address"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "preSign",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "name": "approval",
          "type": "bool"
        }
      ],
      "name": "setSignatureValidatorApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "signerAddress",
          "type": "address"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "signerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "SignatureValidatorApproval",
      "type": "event"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity 0.5.0;\n\nimport \"../interfaces/ISignatureValidator.sol\";\n\n\ncontract MSignatureValidator is\n    ISignatureValidator\n{\n    event SignatureValidatorApproval(\n        address indexed signerAddress,     // Address that approves or disapproves a contract to verify signatures.\n        address indexed validatorAddress,  // Address of signature validator contract.\n        bool approved                      // Approval or disapproval of validator contract.\n    );\n\n    // Allowed signature types.\n    enum SignatureType {\n        Illegal,         // 0x00, default value\n        Invalid,         // 0x01\n        EIP712,          // 0x02\n        EthSign,         // 0x03\n        Wallet,          // 0x04\n        Validator,       // 0x05\n        PreSigned,       // 0x06\n        NSignatureTypes  // 0x07, number of signature types. Always leave at end.\n    }\n\n    /// @dev Verifies signature using logic defined by Wallet contract.\n    /// @param hash Any 32 byte hash.\n    /// @param walletAddress Address that should have signed the given hash\n    ///                      and defines its own signature verification method.\n    /// @param signature Proof that the hash has been signed by signer.\n    /// @return True if the address recovered from the provided signature matches the input signer address.\n    function isValidWalletSignature(\n        bytes32 hash,\n        address walletAddress,\n        bytes memory signature\n    )\n        internal\n        view\n        returns (bool isValid);\n\n    /// @dev Verifies signature using logic defined by Validator contract.\n    /// @param validatorAddress Address of validator contract.\n    /// @param hash Any 32 byte hash.\n    /// @param signerAddress Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    /// @return True if the address recovered from the provided signature matches the input signer address.\n    function isValidValidatorSignature(\n        address validatorAddress,\n        bytes32 hash,\n        address signerAddress,\n        bytes memory signature\n    )\n        internal\n        view\n        returns (bool isValid);\n}\n",
  "sourcePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/mixins/MSignatureValidator.sol",
  "ast": {
    "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/mixins/MSignatureValidator.sol",
    "exportedSymbols": {
      "MSignatureValidator": [
        5781
      ]
    },
    "id": 5782,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5736,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:22:38"
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/ISignatureValidator.sol",
        "file": "../interfaces/ISignatureValidator.sol",
        "id": 5737,
        "nodeType": "ImportDirective",
        "scope": 5782,
        "sourceUnit": 4729,
        "src": "604:47:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5738,
              "name": "ISignatureValidator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4728,
              "src": "690:19:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISignatureValidator_$4728",
                "typeString": "contract ISignatureValidator"
              }
            },
            "id": 5739,
            "nodeType": "InheritanceSpecifier",
            "src": "690:19:38"
          }
        ],
        "contractDependencies": [
          4728
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 5781,
        "linearizedBaseContracts": [
          5781,
          4728
        ],
        "name": "MSignatureValidator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 5747,
            "name": "SignatureValidatorApproval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5741,
                  "indexed": true,
                  "name": "signerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5747,
                  "src": "758:29:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5743,
                  "indexed": true,
                  "name": "validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5747,
                  "src": "874:32:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5745,
                  "indexed": false,
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 5747,
                  "src": "961:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5744,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "748:303:38"
            },
            "src": "716:336:38"
          },
          {
            "canonicalName": "MSignatureValidator.SignatureType",
            "id": 5756,
            "members": [
              {
                "id": 5748,
                "name": "Illegal",
                "nodeType": "EnumValue",
                "src": "1119:7:38"
              },
              {
                "id": 5749,
                "name": "Invalid",
                "nodeType": "EnumValue",
                "src": "1167:7:38"
              },
              {
                "id": 5750,
                "name": "EIP712",
                "nodeType": "EnumValue",
                "src": "1200:6:38"
              },
              {
                "id": 5751,
                "name": "EthSign",
                "nodeType": "EnumValue",
                "src": "1233:7:38"
              },
              {
                "id": 5752,
                "name": "Wallet",
                "nodeType": "EnumValue",
                "src": "1266:6:38"
              },
              {
                "id": 5753,
                "name": "Validator",
                "nodeType": "EnumValue",
                "src": "1299:9:38"
              },
              {
                "id": 5754,
                "name": "PreSigned",
                "nodeType": "EnumValue",
                "src": "1332:9:38"
              },
              {
                "id": 5755,
                "name": "NSignatureTypes",
                "nodeType": "EnumValue",
                "src": "1365:15:38"
              }
            ],
            "name": "SignatureType",
            "nodeType": "EnumDefinition",
            "src": "1090:354:38"
          },
          {
            "body": null,
            "documentation": "@dev Verifies signature using logic defined by Wallet contract.\n @param hash Any 32 byte hash.\n @param walletAddress Address that should have signed the given hash\n                      and defines its own signature verification method.\n @param signature Proof that the hash has been signed by signer.\n @return True if the address recovered from the provided signature matches the input signer address.",
            "id": 5767,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidWalletSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5758,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5767,
                  "src": "1937:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5757,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1937:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5760,
                  "name": "walletAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5767,
                  "src": "1959:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5762,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5767,
                  "src": "1990:22:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5761,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1927:91:38"
            },
            "returnParameters": {
              "id": 5766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5765,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 5767,
                  "src": "2066:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5764,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2065:14:38"
            },
            "scope": 5781,
            "src": "1896:184:38",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Verifies signature using logic defined by Validator contract.\n @param validatorAddress Address of validator contract.\n @param hash Any 32 byte hash.\n @param signerAddress Address that should have signed the given hash.\n @param signature Proof that the hash has been signed by signer.\n @return True if the address recovered from the provided signature matches the input signer address.",
            "id": 5780,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidValidatorSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5769,
                  "name": "validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5780,
                  "src": "2563:24:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2563:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5771,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5780,
                  "src": "2597:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5770,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2597:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5773,
                  "name": "signerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5780,
                  "src": "2619:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2619:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5775,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5780,
                  "src": "2650:22:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5774,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2650:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2553:125:38"
            },
            "returnParameters": {
              "id": 5779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5778,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 5780,
                  "src": "2726:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5777,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2726:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2725:14:38"
            },
            "scope": 5781,
            "src": "2519:221:38",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 5782,
        "src": "654:2088:38"
      }
    ],
    "src": "580:2163:38"
  },
  "legacyAST": {
    "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/mixins/MSignatureValidator.sol",
    "exportedSymbols": {
      "MSignatureValidator": [
        5781
      ]
    },
    "id": 5782,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5736,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:22:38"
      },
      {
        "absolutePath": "/home/rogelio/Code/dbet/prediction-market/core/contracts/0x/protocol/Exchange/interfaces/ISignatureValidator.sol",
        "file": "../interfaces/ISignatureValidator.sol",
        "id": 5737,
        "nodeType": "ImportDirective",
        "scope": 5782,
        "sourceUnit": 4729,
        "src": "604:47:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5738,
              "name": "ISignatureValidator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4728,
              "src": "690:19:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISignatureValidator_$4728",
                "typeString": "contract ISignatureValidator"
              }
            },
            "id": 5739,
            "nodeType": "InheritanceSpecifier",
            "src": "690:19:38"
          }
        ],
        "contractDependencies": [
          4728
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 5781,
        "linearizedBaseContracts": [
          5781,
          4728
        ],
        "name": "MSignatureValidator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 5747,
            "name": "SignatureValidatorApproval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5741,
                  "indexed": true,
                  "name": "signerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5747,
                  "src": "758:29:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5743,
                  "indexed": true,
                  "name": "validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5747,
                  "src": "874:32:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5745,
                  "indexed": false,
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 5747,
                  "src": "961:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5744,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "748:303:38"
            },
            "src": "716:336:38"
          },
          {
            "canonicalName": "MSignatureValidator.SignatureType",
            "id": 5756,
            "members": [
              {
                "id": 5748,
                "name": "Illegal",
                "nodeType": "EnumValue",
                "src": "1119:7:38"
              },
              {
                "id": 5749,
                "name": "Invalid",
                "nodeType": "EnumValue",
                "src": "1167:7:38"
              },
              {
                "id": 5750,
                "name": "EIP712",
                "nodeType": "EnumValue",
                "src": "1200:6:38"
              },
              {
                "id": 5751,
                "name": "EthSign",
                "nodeType": "EnumValue",
                "src": "1233:7:38"
              },
              {
                "id": 5752,
                "name": "Wallet",
                "nodeType": "EnumValue",
                "src": "1266:6:38"
              },
              {
                "id": 5753,
                "name": "Validator",
                "nodeType": "EnumValue",
                "src": "1299:9:38"
              },
              {
                "id": 5754,
                "name": "PreSigned",
                "nodeType": "EnumValue",
                "src": "1332:9:38"
              },
              {
                "id": 5755,
                "name": "NSignatureTypes",
                "nodeType": "EnumValue",
                "src": "1365:15:38"
              }
            ],
            "name": "SignatureType",
            "nodeType": "EnumDefinition",
            "src": "1090:354:38"
          },
          {
            "body": null,
            "documentation": "@dev Verifies signature using logic defined by Wallet contract.\n @param hash Any 32 byte hash.\n @param walletAddress Address that should have signed the given hash\n                      and defines its own signature verification method.\n @param signature Proof that the hash has been signed by signer.\n @return True if the address recovered from the provided signature matches the input signer address.",
            "id": 5767,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidWalletSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5758,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5767,
                  "src": "1937:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5757,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1937:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5760,
                  "name": "walletAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5767,
                  "src": "1959:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5762,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5767,
                  "src": "1990:22:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5761,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1927:91:38"
            },
            "returnParameters": {
              "id": 5766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5765,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 5767,
                  "src": "2066:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5764,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2065:14:38"
            },
            "scope": 5781,
            "src": "1896:184:38",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Verifies signature using logic defined by Validator contract.\n @param validatorAddress Address of validator contract.\n @param hash Any 32 byte hash.\n @param signerAddress Address that should have signed the given hash.\n @param signature Proof that the hash has been signed by signer.\n @return True if the address recovered from the provided signature matches the input signer address.",
            "id": 5780,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidValidatorSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5769,
                  "name": "validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5780,
                  "src": "2563:24:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2563:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5771,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5780,
                  "src": "2597:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5770,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2597:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5773,
                  "name": "signerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5780,
                  "src": "2619:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2619:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5775,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5780,
                  "src": "2650:22:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5774,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2650:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2553:125:38"
            },
            "returnParameters": {
              "id": 5779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5778,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 5780,
                  "src": "2726:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5777,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2726:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2725:14:38"
            },
            "scope": 5781,
            "src": "2519:221:38",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 5782,
        "src": "654:2088:38"
      }
    ],
    "src": "580:2163:38"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-31T19:07:12.932Z",
  "devdoc": {
    "methods": {
      "isValidSignature(bytes32,address,bytes)": {
        "details": "Verifies that a signature is valid.",
        "params": {
          "hash": "Message hash that is signed.",
          "signature": "Proof of signing.",
          "signerAddress": "Address of signer."
        },
        "return": "Validity of order signature."
      },
      "preSign(bytes32,address,bytes)": {
        "details": "Approves a hash on-chain using any valid signature type.      After presigning a hash, the preSign signature type will become valid for that hash and signer.",
        "params": {
          "signature": "Proof that the hash has been signed by signer.",
          "signerAddress": "Address that should have signed the given hash."
        }
      },
      "setSignatureValidatorApproval(address,bool)": {
        "details": "Approves/unnapproves a Validator contract to verify signatures on signer's behalf.",
        "params": {
          "approval": "Approval or disapproval of  Validator contract.",
          "validatorAddress": "Address of Validator contract."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}